/*
! tailwindcss v3.4.3 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  /* 3 */
  tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

.default-theme {
  --theme-1: #1f2937;
  --theme-1RGB: 31, 41, 55;
  --theme-2: #1f2937;
  --theme-2RGB: 31, 41, 55;
  --theme-3: #374151;
  --theme-3RGB: 55, 65, 81;
  --theme-1: #111827;
  --theme-1RGB: 17, 24, 39;
  --theme-2: #172035;
  --theme-2RGB: 23, 32, 53;
  --theme-3: #1d2942;
  --theme-3RGB: 29, 41, 66;
  --theme-4: #233150;
  --theme-4RGB: 35, 49, 80;
  --theme-5: #283655;
  --theme-5RGB: 40, 54, 85;
  --active-1: #d8b4fe;
  --active-1RGB: 216, 180, 254;
  --active-2: #6ee7b7;
  --active-2RGB: 110, 231, 183;
  --warning-1: #dfeb41;
  --warning-1RGB: 223, 235, 65;
  --error-1: #be123d;
  --error-1RGB: 190, 18, 60;
  --text-1: #f3f4f6;
  --text-1RGB: 243, 244, 246;
}

.dark-theme {
  --theme-1: #121212;
  --theme-1RGB: 18, 18, 18;
  --theme-2: #191919;
  --theme-2RGB: 25, 25, 25;
  --theme-3: #232323;
  --theme-3RGB: 35, 35, 35;
  --theme-4: #272727;
  --theme-4RGB: 39, 39, 39;
  --active-1: #d8b4fe;
  --active-1RGB: 216, 180, 254;
  --text-1: #f3f4f6;
  --text-1RGB: 243, 244, 246;
}

.anime-theme {
  --theme-1: #150017;
  --theme-1RGB: 21, 0, 23;
  --theme-2: #210024;
  --theme-2RGB: 33, 0, 36;
  --theme-3: #320138;
  --theme-3RGB: 50, 1, 56;
  --active-1: #6ee7b7;
  --active-1RGB: 110, 231, 183;
  --text-1: #f3f4f6;
  --text-1RGB: 243, 244, 246;
}

.serials-theme {
  --theme-1: #190903;
  --theme-1RGB: 25, 9, 3;
  --theme-2: #331107;
  --theme-2RGB: 51, 17, 7;
  --theme-3: #3f160a;
  --theme-3RGB: 63, 22, 10;
  --active-1: #6ee7b7;
  --active-1RGB: 110, 231, 183;
  --text-1: #f3f4f6;
  --text-1RGB: 243, 244, 246;
}

.movies-theme {
  --theme-1: #004857;
  --theme-1RGB: 0, 72, 87;
  --theme-2: #004d5a;
  --theme-2RGB: 0, 77, 90;
  --theme-3: #006b70;
  --theme-3RGB: 0, 107, 112;
  --active-1: #6ee7b7;
  --active-1RGB: 110, 231, 183;
  --text-1: #f3f4f6;
  --text-1RGB: 243, 244, 246;
}

/* MODAL */

.modal {
  position: fixed;
  bottom: 0px;
  left: 0px;
  z-index: 30;
  display: flex;
  height: 100%;
  width: 100%;
  align-items: center;
  justify-content: center;
  text-align: center;
}

.modal-bg {
  position: fixed;
  bottom: 0px;
  left: 0px;
  height: 100%;
  width: 100%;
  --tw-bg-opacity: 1;
  background-color: rgb(75 85 99 / var(--tw-bg-opacity));
  opacity: 0.8;
}

.modal-card {
  position: relative;
  z-index: 40;
  width: 80%;
  border-radius: 0.75rem;
  border-width: 2px;
  --tw-border-opacity: 1;
  border-color: rgba(var(--theme-1RGB), var(--tw-border-opacity));
  background-image: linear-gradient(to top, var(--tw-gradient-stops));
  --tw-gradient-from: rgb(var(--theme-2RGB)) var(--tw-gradient-from-position);
  --tw-gradient-to: rgba(var(--theme-2RGB), 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
  --tw-gradient-to: rgb(var(--theme-3RGB)) var(--tw-gradient-to-position);
  --tw-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);
  --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

@media (min-width: 1024px) {
  .modal-card {
    width: 66.666667%;
  }
}

@media (min-width: 1536px) {
  .modal-card {
    width: 33.333333%;
  }
}

.modal-row {
  margin-bottom: 1rem;
  display: flex;
  width: 100%;
  flex-direction: row;
  justify-content: space-between;
}

.modal-row > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1rem * var(--tw-space-x-reverse));
  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
}

/* ___________________________________________ */

/* FORM */

.form-container {
  width: 100%;
  justify-content: space-evenly;
  border-radius: 0.75rem;
  border-width: 2px;
  --tw-border-opacity: 1;
  border-color: rgba(var(--theme-3RGB), var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgba(var(--theme-2RGB), var(--tw-bg-opacity));
  padding: 1rem;
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.form-row {
  display: flex;
  width: 100%;
  flex-direction: column;
  justify-content: space-between;
}

@media (min-width: 1536px) {
  .form-row {
    flex-direction: row;
  }

  .form-row > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0.25rem * var(--tw-space-x-reverse));
    margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
  }
}

.form-column {
  width: 100%;
}

.form-column > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
}

.input-container {
  position: relative;
  width: 100%;
  border-bottom-width: 2px;
  --tw-border-opacity: 1;
  border-color: rgba(var(--theme-4RGB), var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgba(var(--theme-3RGB), var(--tw-bg-opacity));
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  padding-bottom: 0.75rem;
  padding-top: 1.75rem;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-duration: 150ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.input-container:focus-within {
  border-color: rgba(var(--active-1RGB), 0.5);
}

.input-container-no-label {
  padding-bottom: 1.25rem;
  padding-top: 1.25rem;
}

.input-label {
  position: absolute;
  left: 0.75rem;
  top: 0.25rem;
  -webkit-user-select: none;
          user-select: none;
  font-size: 0.875rem;
  line-height: 1.25rem;
  opacity: 0.6;
}

.input-error {
  margin-top: 0.25rem;
  text-align: left;
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tw-text-opacity: 1;
  color: rgba(var(--error-1RGB), var(--tw-text-opacity));
}

.input-text {
  width: 100%;
  background-color: transparent;
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.input-border-placeholder {
  border-radius: 0.5rem;
  border-width: 2px;
  border-color: transparent;
}

.input-multi-options {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: center;
}

.option {
  display: flex;
  cursor: pointer;
  border-radius: 0.5rem;
  border-width: 2px;
  border-color: rgba(var(--active-1RGB), 0.2);
  color: rgba(var(--text-1RGB), 0.8);
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.option:hover {
  background-color: rgba(var(--active-1RGB), 0.1);
  --tw-text-opacity: 1;
  color: rgba(var(--text-1RGB), var(--tw-text-opacity));
}

.option-single {
  justify-content: center;
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  display: flex;
  cursor: pointer;
  border-radius: 0.5rem;
  border-width: 2px;
  border-color: rgba(var(--active-1RGB), 0.2);
  color: rgba(var(--text-1RGB), 0.8);
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.option-single:hover {
  background-color: rgba(var(--active-1RGB), 0.1);
  --tw-text-opacity: 1;
  color: rgba(var(--text-1RGB), var(--tw-text-opacity));
}

.option-checkbox {
  display: flex;
  align-items: center;
  border-top-left-radius: 0.5rem;
  border-bottom-left-radius: 0.5rem;
  border-right-width: 2px;
  border-color: rgba(var(--active-1RGB), 0.2);
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.option-checkbox-selected {
  --tw-border-opacity: 1;
  border-color: rgba(var(--active-1RGB), var(--tw-border-opacity));
  --tw-text-opacity: 1;
  color: rgba(var(--active-1RGB), var(--tw-text-opacity));
}

.option-radio {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  width: -webkit-min-content;
  width: min-content;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  padding-left: 1rem;
  padding-right: 1rem;
  display: flex;
  cursor: pointer;
  border-radius: 0.5rem;
  border-width: 2px;
  border-color: rgba(var(--active-1RGB), 0.2);
  color: rgba(var(--text-1RGB), 0.8);
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.option-radio:hover {
  background-color: rgba(var(--active-1RGB), 0.1);
  --tw-text-opacity: 1;
  color: rgba(var(--text-1RGB), var(--tw-text-opacity));
}

.option-inline {
  margin-right: 0.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
  display: flex;
  cursor: pointer;
  border-radius: 0.5rem;
  border-width: 2px;
  border-color: rgba(var(--active-1RGB), 0.2);
  color: rgba(var(--text-1RGB), 0.8);
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.option-inline:hover {
  background-color: rgba(var(--active-1RGB), 0.1);
  --tw-text-opacity: 1;
  color: rgba(var(--text-1RGB), var(--tw-text-opacity));
}

.option-selected {
  --tw-border-opacity: 1;
  border-color: rgba(var(--active-1RGB), var(--tw-border-opacity));
  --tw-text-opacity: 1;
  color: rgba(var(--active-1RGB), var(--tw-text-opacity));
}

.option-selected:hover {
  --tw-text-opacity: 1;
  color: rgba(var(--active-1RGB), var(--tw-text-opacity));
}

.option-selected-disabled {
  cursor: default;
  background-color: rgb(255 255 255 / 0.15);
}

.option-selected-disabled:hover {
  background-color: rgb(255 255 255 / 0.15);
  --tw-text-opacity: 1;
  color: rgba(var(--active-1RGB), var(--tw-text-opacity));
}

.option-disabled {
  cursor: default;
  background-color: rgb(255 255 255 / 0.15);
}

.option-disabled:hover {
  background-color: rgb(255 255 255 / 0.15);
  color: rgba(var(--text-1RGB), 0.8);
}

.option-dropdown-container {
  position: absolute;
  z-index: 10;
  max-height: 13rem;
  width: 100%;
  transform-origin: top;
  --tw-scale-x: 0;
  --tw-scale-y: 0;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.option-dropdown-container > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(2px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(2px * var(--tw-divide-y-reverse));
  --tw-divide-opacity: 1;
  border-color: rgba(var(--theme-3RGB), var(--tw-divide-opacity));
}

.option-dropdown-container {
  overflow-y: auto;
  border-radius: 0.125rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgba(var(--theme-3RGB), var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgba(var(--theme-2RGB), var(--tw-bg-opacity));
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.group:hover .option-dropdown-container {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.option-dropdown-item {
  cursor: pointer;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  padding: 0.25rem;
  text-align: center;
}

.option-dropdown-item:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--theme-3RGB), var(--tw-bg-opacity));
}

.ring-error {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-color: rgba(var(--error-1RGB), var(--tw-ring-opacity));
  --tw-ring-opacity: 0.3;
}

/* ___________________________________________ */

/* Contenting Tables */

.row-icons-container {
  margin-right: 0.5rem;
  display: flex;
  justify-content: flex-end;
}

.row-icons-container > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
  --tw-divide-x-reverse: 0;
  border-right-width: calc(1px * var(--tw-divide-x-reverse));
  border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
  border-color: rgba(var(--active-1RGB), 0.2);
}

.row-icon {
  margin-left: 0.5rem;
  width: 1rem;
  color: rgba(var(--text-1RGB), 0.3);
}

.row-icon:hover {
  --tw-text-opacity: 1;
  color: rgba(var(--text-1RGB), var(--tw-text-opacity));
}

/* ___________________________________________ */

/* UNCATEGORIZED */

.btn-base {
  position: relative;
  display: flex;
  align-items: center;
}

.btn-base > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.btn-base {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  font-weight: 700;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.btn-base:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.btn {
  cursor: pointer;
  border-width: 2px;
  --tw-border-opacity: 1;
  border-color: rgba(var(--theme-3RGB), var(--tw-border-opacity));
  padding: 0.5rem;
  color: rgba(var(--text-1RGB), 0.5);
}

.btn:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--theme-3RGB), var(--tw-bg-opacity));
  color: rgba(var(--active-1RGB), 1);
}

.btn:active {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--theme-4RGB), var(--tw-bg-opacity));
}

.btn-selected {
  border-color: rgba(var(--active-1RGB), 0.5);
  color: rgba(var(--active-1RGB), 0.7);
}

.btn-compact {
  cursor: pointer;
  padding: 0.5rem;
}

.btn-compact:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--theme-3RGB), var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgba(var(--active-1RGB), var(--tw-text-opacity));
}

.btn-compact-text {
  width: 0px;
  --tw-scale-x: 0;
  --tw-scale-y: 0;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  overflow: hidden;
  white-space: nowrap;
  text-align: left;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
}

.group:hover .btn-compact-text {
  width: 100%;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.nav-link {
  padding: 0.5rem;
  transition-duration: 150ms;
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.nav-link:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--theme-3RGB), var(--tw-bg-opacity));
}

/* TODO: (L) opacity-10 group-hover:opacity-80 should be other class */

.wiggling-clickable {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  cursor: pointer;
  opacity: 0;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

@keyframes wiggle {
  0%, 100% {
    transform: rotate(-3deg);
  }

  50% {
    transform: rotate(3deg);
  }
}

.wiggling-clickable:hover {
  animation: wiggle 1.5s ease-in-out infinite;
  --tw-text-opacity: 1;
  color: rgba(var(--active-1RGB), var(--tw-text-opacity));
}

.group:hover .wiggling-clickable {
  opacity: 0.75;
}

.simple-clickable {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  cursor: pointer;
  opacity: 0.4;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.simple-clickable:hover {
  --tw-text-opacity: 1;
  color: rgba(var(--active-1RGB), var(--tw-text-opacity));
  opacity: 1;
}

.title {
  margin-bottom: 1rem;
  text-align: center;
  font-size: 1.25rem;
  line-height: 1.75rem;
  font-weight: 700;
  text-transform: uppercase;
}

.side-panel {
  width: 13rem;
  --tw-bg-opacity: 1;
  background-color: rgba(var(--theme-1RGB), var(--tw-bg-opacity));
  padding: 0.25rem;
  --tw-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);
  --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.side-panel-el {
  cursor: pointer;
  padding: 0.5rem;
  transition-duration: 150ms;
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.side-panel-el:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--theme-3RGB), var(--tw-bg-opacity));
}

.side-panel-btn {
  box-sizing: border-box;
  display: flex;
}

.side-panel-btn > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.75rem * var(--tw-space-x-reverse));
  margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));
}

.side-panel-btn {
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgba(var(--active-1RGB), var(--tw-border-opacity));
  cursor: pointer;
  padding: 0.5rem;
  transition-duration: 150ms;
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.side-panel-btn:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--theme-3RGB), var(--tw-bg-opacity));
}

.side-panel-el-active {
  border-left-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgba(var(--active-1RGB), var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgba(var(--theme-2RGB), var(--tw-bg-opacity));
}

.side-panel-sep {
  margin-top: 0.75rem;
  margin-bottom: 0.75rem;
  border-bottom-width: 2px;
  --tw-border-opacity: 1;
  border-color: rgba(var(--theme-3RGB), var(--tw-border-opacity));
}

.tooltip {
  position: absolute;
  top: 100%;
  left: 50%;
  z-index: 50;
  margin-top: 1rem;
  width: -webkit-max-content;
  width: max-content;
  transform-origin: top;
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  cursor: default;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgba(var(--text-1RGB), var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgba(var(--theme-2RGB), var(--tw-bg-opacity));
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 300;
  --tw-text-opacity: 1;
  color: rgba(var(--text-1RGB), var(--tw-text-opacity));
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 75ms;
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.led {
  height: 0.5rem;
  width: 0.5rem;
  border-radius: 9999px;
}

.led-off {
  border-width: 1px;
  border-color: rgba(var(--active-1RGB), 0.5);
}

.led-on-green {
  background-color: rgba(var(--active-2RGB), 0.7);
  --tw-shadow: 0 0 .35em .1em, 0 0 .5em .1em;
  --tw-shadow-colored: 0 0 .35em .1em var(--tw-shadow-color), 0 0 .5em .1em var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  --tw-shadow-color: rgba(var(--active-2RGB), 0.3);
  --tw-shadow: var(--tw-shadow-colored);
}

.led-on-red {
  background-color: rgba(var(--error-1RGB), 0.7);
  --tw-shadow: 0 0 .35em .1em, 0 0 .5em .1em;
  --tw-shadow-colored: 0 0 .35em .1em var(--tw-shadow-color), 0 0 .5em .1em var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  --tw-shadow-color: rgba(var(--error-1RGB), 0.3);
  --tw-shadow: var(--tw-shadow-colored);
}

/* ___________________________________________ */

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: -webkit-sticky;
  position: sticky;
}

.-left-2 {
  left: -0.5rem;
}

.-left-5 {
  left: -1.25rem;
}

.-right-3 {
  right: -0.75rem;
}

.-top-3 {
  top: -0.75rem;
}

.bottom-0 {
  bottom: 0px;
}

.right-0 {
  right: 0px;
}

.right-1 {
  right: 0.25rem;
}

.right-2 {
  right: 0.5rem;
}

.top-0 {
  top: 0px;
}

.top-1 {
  top: 0.25rem;
}

.top-2 {
  top: 0.5rem;
}

.top-6 {
  top: 1.5rem;
}

.top-64 {
  top: 16rem;
}

.top-full {
  top: 100%;
}

.z-10 {
  z-index: 10;
}

.z-30 {
  z-index: 30;
}

.m-1 {
  margin: 0.25rem;
}

.m-2 {
  margin: 0.5rem;
}

.m-4 {
  margin: 1rem;
}

.m-5 {
  margin: 1.25rem;
}

.mx-1 {
  margin-left: 0.25rem;
  margin-right: 0.25rem;
}

.mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

.mx-5 {
  margin-left: 1.25rem;
  margin-right: 1.25rem;
}

.my-2 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

.my-5 {
  margin-top: 1.25rem;
  margin-bottom: 1.25rem;
}

.my-auto {
  margin-top: auto;
  margin-bottom: auto;
}

.mb-1 {
  margin-bottom: 0.25rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mb-28 {
  margin-bottom: 7rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.ml-2 {
  margin-left: 0.5rem;
}

.ml-4 {
  margin-left: 1rem;
}

.mr-2 {
  margin-right: 0.5rem;
}

.mr-4 {
  margin-right: 1rem;
}

.mt-1 {
  margin-top: 0.25rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-3 {
  margin-top: 0.75rem;
}

.inline {
  display: inline;
}

.flex {
  display: flex;
}

.hidden {
  display: none;
}

.h-12 {
  height: 3rem;
}

.h-14 {
  height: 3.5rem;
}

.h-full {
  height: 100%;
}

.max-h-160 {
  max-height: 40rem;
}

.max-h-220 {
  max-height: 55rem;
}

.max-h-screen {
  max-height: 100vh;
}

.min-h-screen {
  min-height: 100vh;
}

.w-1 {
  width: 0.25rem;
}

.w-1\/2 {
  width: 50%;
}

.w-1\/3 {
  width: 33.333333%;
}

.w-10 {
  width: 2.5rem;
}

.w-10\/12 {
  width: 83.333333%;
}

.w-12 {
  width: 3rem;
}

.w-16 {
  width: 4rem;
}

.w-20 {
  width: 5rem;
}

.w-24 {
  width: 6rem;
}

.w-3 {
  width: 0.75rem;
}

.w-4 {
  width: 1rem;
}

.w-5 {
  width: 1.25rem;
}

.w-52 {
  width: 13rem;
}

.w-6 {
  width: 1.5rem;
}

.w-60 {
  width: 15rem;
}

.w-8 {
  width: 2rem;
}

.w-full {
  width: 100%;
}

.min-w-120 {
  min-width: 30rem;
}

.min-w-60 {
  min-width: 15rem;
}

.flex-1 {
  flex: 1 1 0%;
}

.flex-2 {
  flex: 2 2 0%;
}

.flex-3 {
  flex: 3 3 0%;
}

.grow {
  flex-grow: 1;
}

.-rotate-180 {
  --tw-rotate: -180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-rotate-90 {
  --tw-rotate: -90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rotate-90 {
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.scale-0 {
  --tw-scale-x: 0;
  --tw-scale-y: 0;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.scale-100 {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.scale-75 {
  --tw-scale-x: .75;
  --tw-scale-y: .75;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.animate-spin {
  animation: spin 1s linear infinite;
}

.cursor-pointer {
  cursor: pointer;
}

.select-none {
  -webkit-user-select: none;
          user-select: none;
}

.resize-none {
  resize: none;
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.flex-col-reverse {
  flex-direction: column-reverse;
}

.flex-wrap {
  flex-wrap: wrap;
}

.items-end {
  align-items: flex-end;
}

.items-center {
  align-items: center;
}

.items-baseline {
  align-items: baseline;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.space-x-0 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0px * var(--tw-space-x-reverse));
  margin-left: calc(0px * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-0\.5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.125rem * var(--tw-space-x-reverse));
  margin-left: calc(0.125rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.75rem * var(--tw-space-x-reverse));
  margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
}

.space-y-10 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2.5rem * var(--tw-space-y-reverse));
}

.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}

.space-y-5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.25rem * var(--tw-space-y-reverse));
}

.divide-x > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-x-reverse: 0;
  border-right-width: calc(1px * var(--tw-divide-x-reverse));
  border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
}

.divide-y > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}

.divide-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(2px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(2px * var(--tw-divide-y-reverse));
}

.divide-active-1\/10 > :not([hidden]) ~ :not([hidden]) {
  border-color: rgba(var(--active-1RGB), 0.1);
}

.divide-active-1\/20 > :not([hidden]) ~ :not([hidden]) {
  border-color: rgba(var(--active-1RGB), 0.2);
}

.divide-theme-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-opacity: 1;
  border-color: rgba(var(--theme-2RGB), var(--tw-divide-opacity));
}

.self-start {
  align-self: flex-start;
}

.overflow-auto {
  overflow: auto;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-y-auto {
  overflow-y: auto;
}

.overflow-x-hidden {
  overflow-x: hidden;
}

.break-all {
  word-break: break-all;
}

.rounded-3xl {
  border-radius: 1.5rem;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-md {
  border-radius: 0.375rem;
}

.rounded-none {
  border-radius: 0px;
}

.rounded-xl {
  border-radius: 0.75rem;
}

.border {
  border-width: 1px;
}

.border-2 {
  border-width: 2px;
}

.border-b-2 {
  border-bottom-width: 2px;
}

.border-l {
  border-left-width: 1px;
}

.border-r-2 {
  border-right-width: 2px;
}

.border-t-2 {
  border-top-width: 2px;
}

.border-active-1 {
  --tw-border-opacity: 1;
  border-color: rgba(var(--active-1RGB), var(--tw-border-opacity));
}

.border-active-1\/0 {
  border-color: rgba(var(--active-1RGB), 0);
}

.border-active-1\/30 {
  border-color: rgba(var(--active-1RGB), 0.3);
}

.border-active-1\/50 {
  border-color: rgba(var(--active-1RGB), 0.5);
}

.border-active-1\/70 {
  border-color: rgba(var(--active-1RGB), 0.7);
}

.border-active-1\/80 {
  border-color: rgba(var(--active-1RGB), 0.8);
}

.border-error-1 {
  --tw-border-opacity: 1;
  border-color: rgba(var(--error-1RGB), var(--tw-border-opacity));
}

.border-error-1\/80 {
  border-color: rgba(var(--error-1RGB), 0.8);
}

.border-theme-2 {
  --tw-border-opacity: 1;
  border-color: rgba(var(--theme-2RGB), var(--tw-border-opacity));
}

.border-theme-3 {
  --tw-border-opacity: 1;
  border-color: rgba(var(--theme-3RGB), var(--tw-border-opacity));
}

.border-theme-4 {
  --tw-border-opacity: 1;
  border-color: rgba(var(--theme-4RGB), var(--tw-border-opacity));
}

.border-theme-5 {
  --tw-border-opacity: 1;
  border-color: rgba(var(--theme-5RGB), var(--tw-border-opacity));
}

.border-opacity-70 {
  --tw-border-opacity: 0.7;
}

.bg-active-1\/5 {
  background-color: rgba(var(--active-1RGB), 0.05);
}

.bg-gray-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(75 85 99 / var(--tw-bg-opacity));
}

.bg-gray-800 {
  --tw-bg-opacity: 1;
  background-color: rgb(31 41 55 / var(--tw-bg-opacity));
}

.bg-inherit {
  background-color: inherit;
}

.bg-theme-1 {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--theme-1RGB), var(--tw-bg-opacity));
}

.bg-theme-2 {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--theme-2RGB), var(--tw-bg-opacity));
}

.bg-theme-3\/30 {
  background-color: rgba(var(--theme-3RGB), 0.3);
}

.bg-theme-3\/40 {
  background-color: rgba(var(--theme-3RGB), 0.4);
}

.bg-theme-3\/60 {
  background-color: rgba(var(--theme-3RGB), 0.6);
}

.bg-gradient-to-t {
  background-image: linear-gradient(to top, var(--tw-gradient-stops));
}

.from-theme-2 {
  --tw-gradient-from: rgb(var(--theme-2RGB)) var(--tw-gradient-from-position);
  --tw-gradient-to: rgba(var(--theme-2RGB), 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.to-theme-3 {
  --tw-gradient-to: rgb(var(--theme-3RGB)) var(--tw-gradient-to-position);
}

.object-center {
  object-position: center;
}

.p-1 {
  padding: 0.25rem;
}

.p-2 {
  padding: 0.5rem;
}

.p-3 {
  padding: 0.75rem;
}

.p-5 {
  padding: 1.25rem;
}

.p-8 {
  padding: 2rem;
}

.px-10 {
  padding-left: 2.5rem;
  padding-right: 2.5rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.py-5 {
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
}

.pb-1 {
  padding-bottom: 0.25rem;
}

.pb-16 {
  padding-bottom: 4rem;
}

.pb-3 {
  padding-bottom: 0.75rem;
}

.pb-8 {
  padding-bottom: 2rem;
}

.pl-2 {
  padding-left: 0.5rem;
}

.pl-4 {
  padding-left: 1rem;
}

.pl-5 {
  padding-left: 1.25rem;
}

.pr-4 {
  padding-right: 1rem;
}

.pt-2 {
  padding-top: 0.5rem;
}

.pt-5 {
  padding-top: 1.25rem;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.font-sans {
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-\[9px\] {
  font-size: 9px;
}

.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.font-bold {
  font-weight: 700;
}

.font-semibold {
  font-weight: 600;
}

.uppercase {
  text-transform: uppercase;
}

.tracking-tighter {
  letter-spacing: -0.05em;
}

.text-active-1 {
  --tw-text-opacity: 1;
  color: rgba(var(--active-1RGB), var(--tw-text-opacity));
}

.text-active-1\/20 {
  color: rgba(var(--active-1RGB), 0.2);
}

.text-active-1\/40 {
  color: rgba(var(--active-1RGB), 0.4);
}

.text-active-1\/70 {
  color: rgba(var(--active-1RGB), 0.7);
}

.text-active-1\/80 {
  color: rgba(var(--active-1RGB), 0.8);
}

.text-active-2 {
  --tw-text-opacity: 1;
  color: rgba(var(--active-2RGB), var(--tw-text-opacity));
}

.text-active-2\/80 {
  color: rgba(var(--active-2RGB), 0.8);
}

.text-error-1 {
  --tw-text-opacity: 1;
  color: rgba(var(--error-1RGB), var(--tw-text-opacity));
}

.text-error-1\/80 {
  color: rgba(var(--error-1RGB), 0.8);
}

.text-text-1 {
  --tw-text-opacity: 1;
  color: rgba(var(--text-1RGB), var(--tw-text-opacity));
}

.text-text-1\/10 {
  color: rgba(var(--text-1RGB), 0.1);
}

.text-text-1\/20 {
  color: rgba(var(--text-1RGB), 0.2);
}

.text-text-1\/30 {
  color: rgba(var(--text-1RGB), 0.3);
}

.text-text-1\/60 {
  color: rgba(var(--text-1RGB), 0.6);
}

.text-warning-1 {
  --tw-text-opacity: 1;
  color: rgba(var(--warning-1RGB), var(--tw-text-opacity));
}

.opacity-0 {
  opacity: 0;
}

.opacity-10 {
  opacity: 0.1;
}

.opacity-100 {
  opacity: 1;
}

.opacity-20 {
  opacity: 0.2;
}

.opacity-30 {
  opacity: 0.3;
}

.opacity-50 {
  opacity: 0.5;
}

.opacity-60 {
  opacity: 0.6;
}

.opacity-70 {
  opacity: 0.7;
}

.opacity-75 {
  opacity: 0.75;
}

.opacity-80 {
  opacity: 0.8;
}

.shadow-2xl {
  --tw-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);
  --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-inner {
  --tw-shadow: inset 0 2px 4px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: inset 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-none {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-active-1\/5 {
  --tw-shadow-color: rgba(var(--active-1RGB), 0.05);
  --tw-shadow: var(--tw-shadow-colored);
}

.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.blur-sm {
  --tw-blur: blur(4px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.brightness-125 {
  --tw-brightness: brightness(1.25);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-100 {
  transition-duration: 100ms;
}

.duration-150 {
  transition-duration: 150ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.ease-in {
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

input[type='number']::-webkit-inner-spin-button,
  input[type='number']::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.hover\:bg-theme-3:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--theme-3RGB), var(--tw-bg-opacity));
}

.hover\:bg-theme-3\/50:hover {
  background-color: rgba(var(--theme-3RGB), 0.5);
}

.hover\:text-active-1:hover {
  --tw-text-opacity: 1;
  color: rgba(var(--active-1RGB), var(--tw-text-opacity));
}

.hover\:text-error-1:hover {
  --tw-text-opacity: 1;
  color: rgba(var(--error-1RGB), var(--tw-text-opacity));
}

.hover\:text-text-1:hover {
  --tw-text-opacity: 1;
  color: rgba(var(--text-1RGB), var(--tw-text-opacity));
}

.hover\:underline:hover {
  text-decoration-line: underline;
}

.active\:bg-theme-5:active {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--theme-5RGB), var(--tw-bg-opacity));
}

.group:hover .group-hover\:-rotate-180 {
  --tw-rotate: -180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.group:hover .group-hover\:scale-100 {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.group:hover .group-hover\:opacity-100 {
  opacity: 1;
}

@media (min-width: 1536px) {
  .\32xl\:flex-nowrap {
    flex-wrap: nowrap;
  }
}
